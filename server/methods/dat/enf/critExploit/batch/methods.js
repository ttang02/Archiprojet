//BATCH
Meteor.methods({
    'addBatchAppliEmpty' : function(){
        console.log("The method 'addBatchAppliEmpty' has been called!");
        return BatchApplicatif.insert({batch : "", plage : "", frequence : "", impactMetier :"", impactCharge :"", createAt: new Date()});
    },
    'updateBatchAppli' : function(idBatchAppl, batch, plage, frequence, impactMetier, impactCharge){
        console.log("The method 'updateBatchAppli' has been called!");
        console.log("\tBatch ID : "+idBatchAppl);
        console.log("\tbatch :" +batch);
        console.log("\tplage :" +plage);
        console.log("\tfrequence :" +frequence);
        console.log("\timpactMetier :" +impactMetier);
        console.log("\timpactCharge :" +impactCharge);

        return BatchApplicatif.update({_id : idBatchAppl}, {$set: {batch : batch, plage : plage, frequence : frequence, impactMetier : impactMetier, impactCharge : impactCharge}});
    },
    'deleteBatchAppli' : function(idBatchAppl){
        console.log("The method 'deleteBatchAppli' has been called!");
        console.log("\tBatch ID : "+idBatchAppl);

        Enf.find().forEach(function(enf){
            Meteor.call('deleteDependanceToCrt', enf._id, idBatchAppl);
        });
       return BatchApplicatif.remove(idBatchAppl);
    },
    'deleteBatchAppliById' : function(idBatchAppl){
        console.log("The method 'deleteBatchAppliById' has been called!");
        console.log("\tBatch ID : "+idBatchAppl);

        return BatchApplicatif.remove(idBatchAppl);
    }
});

